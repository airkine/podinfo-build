name: Create Release and Publish Docker Image
# This needs to be worked on more. Good example of creating GH release and attaching packages within the  release
on:
  push:
    branches:
      - main

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to GitHub Docker Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build Docker image
      run: |
        docker build -t ghcr.io/${{ github.repository }}/my-app:${{ github.sha }} .
        docker tag ghcr.io/${{ github.repository }}/my-app:${{ github.sha }} ghcr.io/${{ github.repository }}/my-app:latest

    - name: Push Docker image
      run: |
        docker push ghcr.io/${{ github.repository }}/my-app:${{ github.sha }}
        docker push ghcr.io/${{ github.repository }}/my-app:latest

    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.sha }}
        release_name: Release ${{ github.sha }}
        body: |
          ## Changes
          - Describe the changes in this release.
        draft: false
        prerelease: false

    - name: Upload release assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: path/to/your/build/artifact.zip
        asset_name: artifact.zip
        asset_content_type: application/zip
